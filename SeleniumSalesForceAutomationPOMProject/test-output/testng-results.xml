<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="12" total="41" passed="24" failed="5" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-02-25T13:37:45 PST" name="Suite" finished-at="2022-02-25T13:51:10 PST" duration-ms="805227">
    <groups>
    </groups>
    <test started-at="2022-02-25T13:37:45 PST" name="Test" finished-at="2022-02-25T13:51:10 PST" duration-ms="805227">
      <class name="com.salesForce.test.Leads.LeadTest">
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.test.Leads.LeadTest@53ce1329]" started-at="2022-02-25T13:45:07 PST" name="initialSetUp" finished-at="2022-02-25T13:45:14 PST" duration-ms="7043" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.test.Leads.LeadTest.LeadsHomT20()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="LeadsHomT20()[pri:0, instance:com.salesForce.test.Leads.LeadTest@53ce1329]" started-at="2022-02-25T13:45:14 PST" name="LeadsHomT20" finished-at="2022-02-25T13:45:26 PST" duration-ms="12111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LeadsHomT20 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.test.Leads.LeadTest@53ce1329]" started-at="2022-02-25T13:45:26 PST" name="tearDown" finished-at="2022-02-25T13:45:27 PST" duration-ms="304" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LeadsHomT20 status=SUCCESS method=LeadTest.LeadsHomT20()[pri:0, instance:com.salesForce.test.Leads.LeadTest@53ce1329] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.test.Leads.LeadTest@53ce1329]" started-at="2022-02-25T13:45:27 PST" name="initialSetUp" finished-at="2022-02-25T13:45:35 PST" duration-ms="7852" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.test.Leads.LeadTest.T21LeadSelectView()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="T21LeadSelectView()[pri:0, instance:com.salesForce.test.Leads.LeadTest@53ce1329]" started-at="2022-02-25T13:45:35 PST" name="T21LeadSelectView" finished-at="2022-02-25T13:45:50 PST" duration-ms="15414" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- T21LeadSelectView -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.test.Leads.LeadTest@53ce1329]" started-at="2022-02-25T13:45:50 PST" name="tearDown" finished-at="2022-02-25T13:45:50 PST" duration-ms="253" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=T21LeadSelectView status=SUCCESS method=LeadTest.T21LeadSelectView()[pri:0, instance:com.salesForce.test.Leads.LeadTest@53ce1329] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.test.Leads.LeadTest@53ce1329]" started-at="2022-02-25T13:45:50 PST" name="initialSetUp" finished-at="2022-02-25T13:45:55 PST" duration-ms="5221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.test.Leads.LeadTest.T22DefaultView()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="T22DefaultView()[pri:0, instance:com.salesForce.test.Leads.LeadTest@53ce1329]" started-at="2022-02-25T13:45:55 PST" name="T22DefaultView" finished-at="2022-02-25T13:46:21 PST" duration-ms="25922" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- T22DefaultView -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.test.Leads.LeadTest@53ce1329]" started-at="2022-02-25T13:46:21 PST" name="tearDown" finished-at="2022-02-25T13:46:22 PST" duration-ms="815" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=T22DefaultView status=SUCCESS method=LeadTest.T22DefaultView()[pri:0, instance:com.salesForce.test.Leads.LeadTest@53ce1329] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.test.Leads.LeadTest@53ce1329]" started-at="2022-02-25T13:46:22 PST" name="initialSetUp" finished-at="2022-02-25T13:46:28 PST" duration-ms="6129" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.test.Leads.LeadTest.T23TodaysLead()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="T23TodaysLead()[pri:0, instance:com.salesForce.test.Leads.LeadTest@53ce1329]" started-at="2022-02-25T13:46:28 PST" name="T23TodaysLead" finished-at="2022-02-25T13:46:38 PST" duration-ms="10124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- T23TodaysLead -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.test.Leads.LeadTest@53ce1329]" started-at="2022-02-25T13:46:38 PST" name="tearDown" finished-at="2022-02-25T13:46:39 PST" duration-ms="311" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=T23TodaysLead status=SUCCESS method=LeadTest.T23TodaysLead()[pri:0, instance:com.salesForce.test.Leads.LeadTest@53ce1329] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.test.Leads.LeadTest@53ce1329]" started-at="2022-02-25T13:46:39 PST" name="initialSetUp" finished-at="2022-02-25T13:46:46 PST" duration-ms="7695" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.test.Leads.LeadTest.T24NewLead()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="T24NewLead()[pri:0, instance:com.salesForce.test.Leads.LeadTest@53ce1329]" started-at="2022-02-25T13:46:46 PST" name="T24NewLead" finished-at="2022-02-25T13:47:01 PST" duration-ms="14525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- T24NewLead -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.test.Leads.LeadTest@53ce1329]" started-at="2022-02-25T13:47:01 PST" name="tearDown" finished-at="2022-02-25T13:47:01 PST" duration-ms="433" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=T24NewLead status=SUCCESS method=LeadTest.T24NewLead()[pri:0, instance:com.salesForce.test.Leads.LeadTest@53ce1329] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.salesForce.test.Leads.LeadTest -->
      <class name="com.salesForce.test.Contacts.ContactTest">
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:47:01 PST" name="initialSetUp" finished-at="2022-02-25T13:47:11 PST" duration-ms="9243" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.test.Contacts.ContactTest.T26createNewView()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="T26createNewView()[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:47:11 PST" name="T26createNewView" finished-at="2022-02-25T13:47:25 PST" duration-ms="14435" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- T26createNewView -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:47:25 PST" name="tearDown" finished-at="2022-02-25T13:47:27 PST" duration-ms="1971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=T26createNewView status=SUCCESS method=ContactTest.T26createNewView()[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:47:27 PST" name="initialSetUp" finished-at="2022-02-25T13:47:33 PST" duration-ms="6315" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.test.Contacts.ContactTest.T27CheckRecentlyAddesContacts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="T27CheckRecentlyAddesContacts()[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:47:33 PST" name="T27CheckRecentlyAddesContacts" finished-at="2022-02-25T13:47:47 PST" duration-ms="13611" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- T27CheckRecentlyAddesContacts -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:47:47 PST" name="tearDown" finished-at="2022-02-25T13:47:47 PST" duration-ms="258" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=T27CheckRecentlyAddesContacts status=SUCCESS method=ContactTest.T27CheckRecentlyAddesContacts()[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:47:47 PST" name="initialSetUp" finished-at="2022-02-25T13:47:53 PST" duration-ms="5932" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.test.Contacts.ContactTest.T28CheckMyContactView()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="T28CheckMyContactView()[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:47:53 PST" name="T28CheckMyContactView" finished-at="2022-02-25T13:48:36 PST" duration-ms="42659" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Cannot locate element with text: My Contacts
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.5', revision: 'd54ebd709a', time: '2018-11-06T11:42:16'
System info: host: 'DESKTOP-KDKJ11Q', ip: '192.168.0.10', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: driver.version: unknown]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Cannot locate element with text: My Contacts
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.5', revision: 'd54ebd709a', time: '2018-11-06T11:42:16'
System info: host: 'DESKTOP-KDKJ11Q', ip: '192.168.0.10', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: driver.version: unknown
at org.openqa.selenium.support.ui.Select.selectByVisibleText(Select.java:141)
at com.salesfForce.pages.Contacts.ContactHome.myContact(ContactHome.java:88)
at com.salesForce.test.Contacts.ContactTest.T28CheckMyContactView(ContactTest.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- T28CheckMyContactView -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:48:36 PST" name="tearDown" finished-at="2022-02-25T13:48:36 PST" duration-ms="417" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=T28CheckMyContactView status=FAILURE method=ContactTest.T28CheckMyContactView()[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:48:36 PST" name="initialSetUp" finished-at="2022-02-25T13:48:41 PST" duration-ms="4531" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.test.Contacts.ContactTest.T29ViewContactPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="T29ViewContactPage()[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:48:41 PST" name="T29ViewContactPage" finished-at="2022-02-25T13:48:52 PST" duration-ms="11039" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- T29ViewContactPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:48:52 PST" name="tearDown" finished-at="2022-02-25T13:48:52 PST" duration-ms="310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=T29ViewContactPage status=SUCCESS method=ContactTest.T29ViewContactPage()[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:48:52 PST" name="initialSetUp" finished-at="2022-02-25T13:49:04 PST" duration-ms="12367" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.test.Contacts.ContactTest.T30createNewViewErrorMessage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="T30createNewViewErrorMessage()[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:49:04 PST" name="T30createNewViewErrorMessage" finished-at="2022-02-25T13:49:24 PST" duration-ms="19590" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[contactHome page Verified expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: contactHome page Verified expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at com.salesForce.test.Contacts.ContactTest.T30createNewViewErrorMessage(ContactTest.java:67)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- T30createNewViewErrorMessage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:49:24 PST" name="tearDown" finished-at="2022-02-25T13:49:26 PST" duration-ms="1555" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=T30createNewViewErrorMessage status=FAILURE method=ContactTest.T30createNewViewErrorMessage()[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:49:26 PST" name="initialSetUp" finished-at="2022-02-25T13:49:34 PST" duration-ms="8548" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.test.Contacts.ContactTest.T31createNewViewCheckCancelButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="T31createNewViewCheckCancelButton()[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:49:34 PST" name="T31createNewViewCheckCancelButton" finished-at="2022-02-25T13:49:49 PST" duration-ms="15287" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- T31createNewViewCheckCancelButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:49:49 PST" name="tearDown" finished-at="2022-02-25T13:49:50 PST" duration-ms="241" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=T31createNewViewCheckCancelButton status=SUCCESS method=ContactTest.T31createNewViewCheckCancelButton()[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:49:50 PST" name="initialSetUp" finished-at="2022-02-25T13:49:56 PST" duration-ms="6273" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.test.Contacts.ContactTest.T32SaveAndNewButtonVerificationInNewContact()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="T32SaveAndNewButtonVerificationInNewContact()[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:49:56 PST" name="T32SaveAndNewButtonVerificationInNewContact" finished-at="2022-02-25T13:50:12 PST" duration-ms="16436" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- T32SaveAndNewButtonVerificationInNewContact -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:50:12 PST" name="tearDown" finished-at="2022-02-25T13:50:13 PST" duration-ms="638" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=T32SaveAndNewButtonVerificationInNewContact status=SUCCESS method=ContactTest.T32SaveAndNewButtonVerificationInNewContact()[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:50:13 PST" name="initialSetUp" finished-at="2022-02-25T13:50:20 PST" duration-ms="7306" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.test.Contacts.ContactTest.createNewContactsT25()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="createNewContactsT25()[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:50:20 PST" name="createNewContactsT25" finished-at="2022-02-25T13:50:42 PST" duration-ms="21517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewContactsT25 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94]" started-at="2022-02-25T13:50:42 PST" name="tearDown" finished-at="2022-02-25T13:50:42 PST" duration-ms="567" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createNewContactsT25 status=SUCCESS method=ContactTest.createNewContactsT25()[pri:0, instance:com.salesForce.test.Contacts.ContactTest@316bcf94] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.salesForce.test.Contacts.ContactTest -->
      <class name="comm.fierbase.tests.RandomScenario.RandomScenarioTest">
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:comm.fierbase.tests.RandomScenario.RandomScenarioTest@6404f418]" started-at="2022-02-25T13:50:42 PST" name="initialSetUp" finished-at="2022-02-25T13:50:50 PST" duration-ms="7486" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void comm.fierbase.tests.RandomScenario.RandomScenarioTest.verifyTheTabCustomizaionT35()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="verifyTheTabCustomizaionT35()[pri:0, instance:comm.fierbase.tests.RandomScenario.RandomScenarioTest@6404f418]" started-at="2022-02-25T13:50:50 PST" name="verifyTheTabCustomizaionT35" finished-at="2022-02-25T13:51:09 PST" duration-ms="18845" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Cannot locate option with index: 2
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.5', revision: 'd54ebd709a', time: '2018-11-06T11:42:16'
System info: host: 'DESKTOP-KDKJ11Q', ip: '192.168.0.10', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: driver.version: unknown]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Cannot locate option with index: 2
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.5', revision: 'd54ebd709a', time: '2018-11-06T11:42:16'
System info: host: 'DESKTOP-KDKJ11Q', ip: '192.168.0.10', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: driver.version: unknown
at org.openqa.selenium.support.ui.Select.setSelectedByIndex(Select.java:291)
at org.openqa.selenium.support.ui.Select.selectByIndex(Select.java:166)
at com.salesfForce.pages.Home.HomePage.selectFromCustomizedTabAndRemove(HomePage.java:54)
at comm.fierbase.tests.RandomScenario.RandomScenarioTest.verifyTheTabCustomizaionT35(RandomScenarioTest.java:42)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheTabCustomizaionT35 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:comm.fierbase.tests.RandomScenario.RandomScenarioTest@6404f418]" started-at="2022-02-25T13:51:09 PST" name="tearDown" finished-at="2022-02-25T13:51:09 PST" duration-ms="493" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheTabCustomizaionT35 status=FAILURE method=RandomScenarioTest.verifyTheTabCustomizaionT35()[pri:0, instance:comm.fierbase.tests.RandomScenario.RandomScenarioTest@6404f418] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- comm.fierbase.tests.RandomScenario.RandomScenarioTest -->
      <class name="com.salesForce.tests.Home.UserMenuDropDownTest">
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.tests.Home.UserMenuDropDownTest@f0da945]" started-at="2022-02-25T13:39:11 PST" name="initialSetUp" finished-at="2022-02-25T13:39:17 PST" duration-ms="5910" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public static void com.salesForce.tests.Home.UserMenuDropDownTest.developerCOnsoleT08()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="developerCOnsoleT08()[pri:0, instance:com.salesForce.tests.Home.UserMenuDropDownTest@f0da945]" started-at="2022-02-25T13:39:17 PST" name="developerCOnsoleT08" finished-at="2022-02-25T13:39:34 PST" duration-ms="16886" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- developerCOnsoleT08 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.tests.Home.UserMenuDropDownTest@f0da945]" started-at="2022-02-25T13:39:34 PST" name="tearDown" finished-at="2022-02-25T13:39:34 PST" duration-ms="411" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=developerCOnsoleT08 status=SUCCESS method=UserMenuDropDownTest.developerCOnsoleT08()[pri:0, instance:com.salesForce.tests.Home.UserMenuDropDownTest@f0da945] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.tests.Home.UserMenuDropDownTest@f0da945]" started-at="2022-02-25T13:39:34 PST" name="initialSetUp" finished-at="2022-02-25T13:39:43 PST" duration-ms="8851" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public static void com.salesForce.tests.Home.UserMenuDropDownTest.userDropLogOut()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="userDropLogOut()[pri:0, instance:com.salesForce.tests.Home.UserMenuDropDownTest@f0da945]" started-at="2022-02-25T13:39:43 PST" name="userDropLogOut" finished-at="2022-02-25T13:39:56 PST" duration-ms="12717" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userDropLogOut -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.tests.Home.UserMenuDropDownTest@f0da945]" started-at="2022-02-25T13:39:56 PST" name="tearDown" finished-at="2022-02-25T13:39:56 PST" duration-ms="287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userDropLogOut status=SUCCESS method=UserMenuDropDownTest.userDropLogOut()[pri:0, instance:com.salesForce.tests.Home.UserMenuDropDownTest@f0da945] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.tests.Home.UserMenuDropDownTest@f0da945]" started-at="2022-02-25T13:39:56 PST" name="initialSetUp" finished-at="2022-02-25T13:40:02 PST" duration-ms="6140" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public static void com.salesForce.tests.Home.UserMenuDropDownTest.userDropdownMysettingsT07()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="userDropdownMysettingsT07()[pri:0, instance:com.salesForce.tests.Home.UserMenuDropDownTest@f0da945]" started-at="2022-02-25T13:40:02 PST" name="userDropdownMysettingsT07" finished-at="2022-02-25T13:40:24 PST" duration-ms="21882" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userDropdownMysettingsT07 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.tests.Home.UserMenuDropDownTest@f0da945]" started-at="2022-02-25T13:40:24 PST" name="tearDown" finished-at="2022-02-25T13:40:24 PST" duration-ms="326" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userDropdownMysettingsT07 status=SUCCESS method=UserMenuDropDownTest.userDropdownMysettingsT07()[pri:0, instance:com.salesForce.tests.Home.UserMenuDropDownTest@f0da945] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.tests.Home.UserMenuDropDownTest@f0da945]" started-at="2022-02-25T13:40:24 PST" name="initialSetUp" finished-at="2022-02-25T13:40:29 PST" duration-ms="5249" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public static void com.salesForce.tests.Home.UserMenuDropDownTest.userMenuVerification()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="userMenuVerification()[pri:0, instance:com.salesForce.tests.Home.UserMenuDropDownTest@f0da945]" started-at="2022-02-25T13:40:29 PST" name="userMenuVerification" finished-at="2022-02-25T13:42:20 PST" duration-ms="110297" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //div[@class='photoSection hasPhotoLinks']//a[1]' (tried for 50 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //div[@class='photoSection hasPhotoLinks']//a[1]' (tried for 50 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at com.salesForce.base.BasePage.waitUntilVisible(BasePage.java:106)
at com.salesForce.pages.profiles.ProfilePage.clickuploadphotolink(ProfilePage.java:115)
at com.salesForce.tests.Home.UserMenuDropDownTest.userMenuVerification(UserMenuDropDownTest.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='photoSection hasPhotoLinks']//a[1]"}
  (Session info: chrome=98.0.4758.102)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.5', revision: 'd54ebd709a', time: '2018-11-06T11:42:16'
System info: host: 'DESKTOP-KDKJ11Q', ip: '192.168.0.10', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 98.0.4758.102, chrome: {chromedriverVersion: 98.0.4758.102 (273bf7ac8c90..., userDataDir: C:\Users\chitr\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:51157}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: df47231dcbc5a7f28e565cd4a7a5a80d
*** Element info: {Using=xpath, value=//div[@class='photoSection hasPhotoLinks']//a[1]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy15.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userMenuVerification -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.tests.Home.UserMenuDropDownTest@f0da945]" started-at="2022-02-25T13:42:20 PST" name="tearDown" finished-at="2022-02-25T13:42:20 PST" duration-ms="595" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userMenuVerification status=FAILURE method=UserMenuDropDownTest.userMenuVerification()[pri:0, instance:com.salesForce.tests.Home.UserMenuDropDownTest@f0da945] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.salesForce.tests.Home.UserMenuDropDownTest -->
      <class name="com.salesForce.tests.Opportunity.OpportunityTest">
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.tests.Opportunity.OpportunityTest@ffaa6af]" started-at="2022-02-25T13:43:13 PST" name="initialSetUp" finished-at="2022-02-25T13:43:18 PST" duration-ms="5076" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.tests.Opportunity.OpportunityTest.QuartelySumryReportT18()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="QuartelySumryReportT18()[pri:0, instance:com.salesForce.tests.Opportunity.OpportunityTest@ffaa6af]" started-at="2022-02-25T13:43:18 PST" name="QuartelySumryReportT18" finished-at="2022-02-25T13:43:32 PST" duration-ms="14158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QuartelySumryReportT18 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.tests.Opportunity.OpportunityTest@ffaa6af]" started-at="2022-02-25T13:43:32 PST" name="tearDown" finished-at="2022-02-25T13:43:32 PST" duration-ms="371" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QuartelySumryReportT18 status=SUCCESS method=OpportunityTest.QuartelySumryReportT18()[pri:0, instance:com.salesForce.tests.Opportunity.OpportunityTest@ffaa6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.tests.Opportunity.OpportunityTest@ffaa6af]" started-at="2022-02-25T13:43:32 PST" name="initialSetUp" finished-at="2022-02-25T13:43:39 PST" duration-ms="7110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.tests.Opportunity.OpportunityTest.createNewOportuntyT16()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="createNewOportuntyT16()[pri:0, instance:com.salesForce.tests.Opportunity.OpportunityTest@ffaa6af]" started-at="2022-02-25T13:43:39 PST" name="createNewOportuntyT16" finished-at="2022-02-25T13:43:57 PST" duration-ms="17586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewOportuntyT16 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.tests.Opportunity.OpportunityTest@ffaa6af]" started-at="2022-02-25T13:43:57 PST" name="tearDown" finished-at="2022-02-25T13:43:57 PST" duration-ms="209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createNewOportuntyT16 status=SUCCESS method=OpportunityTest.createNewOportuntyT16()[pri:0, instance:com.salesForce.tests.Opportunity.OpportunityTest@ffaa6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.tests.Opportunity.OpportunityTest@ffaa6af]" started-at="2022-02-25T13:43:57 PST" name="initialSetUp" finished-at="2022-02-25T13:44:02 PST" duration-ms="4784" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.tests.Opportunity.OpportunityTest.opportunityPipeLineUserT17()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="opportunityPipeLineUserT17()[pri:0, instance:com.salesForce.tests.Opportunity.OpportunityTest@ffaa6af]" started-at="2022-02-25T13:44:02 PST" name="opportunityPipeLineUserT17" finished-at="2022-02-25T13:44:19 PST" duration-ms="16735" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- opportunityPipeLineUserT17 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.tests.Opportunity.OpportunityTest@ffaa6af]" started-at="2022-02-25T13:44:19 PST" name="tearDown" finished-at="2022-02-25T13:44:20 PST" duration-ms="901" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=opportunityPipeLineUserT17 status=SUCCESS method=OpportunityTest.opportunityPipeLineUserT17()[pri:0, instance:com.salesForce.tests.Opportunity.OpportunityTest@ffaa6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.tests.Opportunity.OpportunityTest@ffaa6af]" started-at="2022-02-25T13:44:20 PST" name="initialSetUp" finished-at="2022-02-25T13:44:27 PST" duration-ms="6860" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.tests.Opportunity.OpportunityTest.opportunityUserT15()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="opportunityUserT15()[pri:0, instance:com.salesForce.tests.Opportunity.OpportunityTest@ffaa6af]" started-at="2022-02-25T13:44:27 PST" name="opportunityUserT15" finished-at="2022-02-25T13:44:46 PST" duration-ms="19344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- opportunityUserT15 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.tests.Opportunity.OpportunityTest@ffaa6af]" started-at="2022-02-25T13:44:46 PST" name="tearDown" finished-at="2022-02-25T13:44:46 PST" duration-ms="236" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=opportunityUserT15 status=SUCCESS method=OpportunityTest.opportunityUserT15()[pri:0, instance:com.salesForce.tests.Opportunity.OpportunityTest@ffaa6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.tests.Opportunity.OpportunityTest@ffaa6af]" started-at="2022-02-25T13:44:46 PST" name="initialSetUp" finished-at="2022-02-25T13:44:54 PST" duration-ms="8178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.tests.Opportunity.OpportunityTest.stuckOpportunityT18()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="stuckOpportunityT18()[pri:0, instance:com.salesForce.tests.Opportunity.OpportunityTest@ffaa6af]" started-at="2022-02-25T13:44:54 PST" name="stuckOpportunityT18" finished-at="2022-02-25T13:45:07 PST" duration-ms="12600" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stuckOpportunityT18 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.tests.Opportunity.OpportunityTest@ffaa6af]" started-at="2022-02-25T13:45:07 PST" name="tearDown" finished-at="2022-02-25T13:45:07 PST" duration-ms="275" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=stuckOpportunityT18 status=SUCCESS method=OpportunityTest.stuckOpportunityT18()[pri:0, instance:com.salesForce.tests.Opportunity.OpportunityTest@ffaa6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.salesForce.tests.Opportunity.OpportunityTest -->
      <class name="com.salesForce.tests.Account.AccountTest">
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.tests.Account.AccountTest@4803b726]" started-at="2022-02-25T13:42:20 PST" name="initialSetUp" finished-at="2022-02-25T13:42:26 PST" duration-ms="5452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.tests.Account.AccountTest.mergeAccountT13()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="mergeAccountT13()[pri:0, instance:com.salesForce.tests.Account.AccountTest@4803b726]" started-at="2022-02-25T13:42:26 PST" name="mergeAccountT13" finished-at="2022-02-25T13:43:12 PST" duration-ms="46163" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"/select[@id='hotlist_mode']"}
  (Session info: chrome=98.0.4758.102)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.5', revision: 'd54ebd709a', time: '2018-11-06T11:42:16'
System info: host: 'DESKTOP-KDKJ11Q', ip: '192.168.0.10', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 98.0.4758.102, chrome: {chromedriverVersion: 98.0.4758.102 (273bf7ac8c90..., userDataDir: C:\Users\chitr\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:51242}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: cde1ee469594475a7d42419215859751
*** Element info: {Using=xpath, value=/select[@id='hotlist_mode']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"/select[@id='hotlist_mode']"}
  (Session info: chrome=98.0.4758.102)
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.5', revision: 'd54ebd709a', time: '2018-11-06T11:42:16'
System info: host: 'DESKTOP-KDKJ11Q', ip: '192.168.0.10', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 98.0.4758.102, chrome: {chromedriverVersion: 98.0.4758.102 (273bf7ac8c90..., userDataDir: C:\Users\chitr\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:51242}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: cde1ee469594475a7d42419215859751
*** Element info: {Using=xpath, value=/select[@id='hotlist_mode']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy15.getTagName(Unknown Source)
at org.openqa.selenium.support.ui.Select.<init>(Select.java:44)
at com.salesForce.base.BasePage.selectByTextData(BasePage.java:135)
at com.salesfForce.pages.Accounts.AccountMerge.mergeAccount(AccountMerge.java:69)
at com.salesForce.tests.Account.AccountTest.mergeAccountT13(AccountTest.java:58)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mergeAccountT13 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.tests.Account.AccountTest@4803b726]" started-at="2022-02-25T13:43:12 PST" name="tearDown" finished-at="2022-02-25T13:43:13 PST" duration-ms="809" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mergeAccountT13 status=FAILURE method=AccountTest.mergeAccountT13()[pri:0, instance:com.salesForce.tests.Account.AccountTest@4803b726] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.salesForce.tests.Account.AccountTest -->
      <class name="com.salesForce.tests.Login.LoginTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.salesForce.tests.Login.LoginTest@5b03b9fe]" started-at="2022-02-25T13:37:45 PST" name="setUp" finished-at="2022-02-25T13:37:45 PST" duration-ms="349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.tests.Login.LoginTest@5b03b9fe]" started-at="2022-02-25T13:37:45 PST" name="initialSetUp" finished-at="2022-02-25T13:38:05 PST" duration-ms="19999" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.tests.Login.LoginTest.ForgotPassword4A()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="ForgotPassword4A()[pri:0, instance:com.salesForce.tests.Login.LoginTest@5b03b9fe]" started-at="2022-02-25T13:38:05 PST" name="ForgotPassword4A" finished-at="2022-02-25T13:38:08 PST" duration-ms="2694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ForgotPassword4A -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.tests.Login.LoginTest@5b03b9fe]" started-at="2022-02-25T13:38:08 PST" name="tearDown" finished-at="2022-02-25T13:38:09 PST" duration-ms="1109" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ForgotPassword4A status=SUCCESS method=LoginTest.ForgotPassword4A()[pri:0, instance:com.salesForce.tests.Login.LoginTest@5b03b9fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.tests.Login.LoginTest@5b03b9fe]" started-at="2022-02-25T13:38:09 PST" name="initialSetUp" finished-at="2022-02-25T13:38:17 PST" duration-ms="7759" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.tests.Login.LoginTest.LoginToSFDCT2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="LoginToSFDCT2()[pri:0, instance:com.salesForce.tests.Login.LoginTest@5b03b9fe]" started-at="2022-02-25T13:38:17 PST" name="LoginToSFDCT2" finished-at="2022-02-25T13:38:25 PST" duration-ms="8304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginToSFDCT2 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.tests.Login.LoginTest@5b03b9fe]" started-at="2022-02-25T13:38:25 PST" name="tearDown" finished-at="2022-02-25T13:38:25 PST" duration-ms="323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginToSFDCT2 status=SUCCESS method=LoginTest.LoginToSFDCT2()[pri:0, instance:com.salesForce.tests.Login.LoginTest@5b03b9fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.tests.Login.LoginTest@5b03b9fe]" started-at="2022-02-25T13:38:25 PST" name="initialSetUp" finished-at="2022-02-25T13:38:32 PST" duration-ms="7027" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.tests.Login.LoginTest.LoginwithoutPwdT1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="LoginwithoutPwdT1()[pri:0, instance:com.salesForce.tests.Login.LoginTest@5b03b9fe]" started-at="2022-02-25T13:38:32 PST" name="LoginwithoutPwdT1" finished-at="2022-02-25T13:38:34 PST" duration-ms="1488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginwithoutPwdT1 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.tests.Login.LoginTest@5b03b9fe]" started-at="2022-02-25T13:38:34 PST" name="tearDown" finished-at="2022-02-25T13:38:37 PST" duration-ms="2785" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=LoginwithoutPwdT1 status=SUCCESS method=LoginTest.LoginwithoutPwdT1()[pri:0, instance:com.salesForce.tests.Login.LoginTest@5b03b9fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.tests.Login.LoginTest@5b03b9fe]" started-at="2022-02-25T13:38:37 PST" name="initialSetUp" finished-at="2022-02-25T13:38:46 PST" duration-ms="8977" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.tests.Login.LoginTest.checkRemeberMe3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="checkRemeberMe3()[pri:0, instance:com.salesForce.tests.Login.LoginTest@5b03b9fe]" started-at="2022-02-25T13:38:46 PST" name="checkRemeberMe3" finished-at="2022-02-25T13:38:59 PST" duration-ms="13247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkRemeberMe3 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.tests.Login.LoginTest@5b03b9fe]" started-at="2022-02-25T13:38:59 PST" name="tearDown" finished-at="2022-02-25T13:38:59 PST" duration-ms="420" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkRemeberMe3 status=SUCCESS method=LoginTest.checkRemeberMe3()[pri:0, instance:com.salesForce.tests.Login.LoginTest@5b03b9fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="initialSetUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.salesForce.tests.Login.LoginTest@5b03b9fe]" started-at="2022-02-25T13:38:59 PST" name="initialSetUp" finished-at="2022-02-25T13:39:09 PST" duration-ms="9993" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.salesForce.tests.Login.LoginTest.validateLoginErrorMesg4B()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method signature="validateLoginErrorMesg4B()[pri:0, instance:com.salesForce.tests.Login.LoginTest@5b03b9fe]" started-at="2022-02-25T13:39:09 PST" name="validateLoginErrorMesg4B" finished-at="2022-02-25T13:39:10 PST" duration-ms="741" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginErrorMesg4B -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.salesForce.tests.Login.LoginTest@5b03b9fe]" started-at="2022-02-25T13:39:10 PST" name="tearDown" finished-at="2022-02-25T13:39:11 PST" duration-ms="625" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLoginErrorMesg4B status=SUCCESS method=LoginTest.validateLoginErrorMesg4B()[pri:0, instance:com.salesForce.tests.Login.LoginTest@5b03b9fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="endUp()[pri:0, instance:com.salesForce.tests.Login.LoginTest@5b03b9fe]" started-at="2022-02-25T13:51:09 PST" name="endUp" finished-at="2022-02-25T13:51:10 PST" duration-ms="889" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endUp -->
      </class> <!-- com.salesForce.tests.Login.LoginTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
